// Test basic floating point arithmetic
assert(1.5 + 2.5 == 4.0);
assert(3.14 - 1.14 > 1.99 && 3.14 - 1.14 < 2.01);
assert(2.5 * 3.0 == 7.5);
assert(7.5 / 2.5 == 3.0);

// Floating-point modulo
assert(9.0 % 4.0 == 1.0);

// Test floating point comparisons
assert(3.14 > 3.0);
assert(2.0 < 2.5);
assert(5.0 >= 5.0);
assert(6.0 <= 6.0);
assert(7.77 == 7.77);
assert(8.0 != 8.1);

// Test floating point methods
assert(3.14.ceil() == 4.0.trunc());
assert(3.14.floor() == 3.0.trunc());
assert((-5.5).abs() == 5.5);
assert(9.0.sqrt() == 3.0);
assert(3.8.trunc() == 3);
assert(9.6.clip(1.0, 3.0) == 3.0);

// Test a simple calculation
let pi = 3.14159;
let r = 2.0;
let area = pi * r * r;
assert(area > 12.566 && area < 12.567);

// More complex arithmetic
let a = 10.5;
let b = 5.2;
let c = 2.0;
let d = 4.0;
let result = (a + b) * c / d;
assert(result == 7.85);

// Edge cases for ceil, floor, trunc
assert(5.0.ceil() == 5.0.trunc());
assert(5.0.floor() == 5.0.trunc());
assert(5.0.trunc() == 5);
assert((-2.7).ceil() == -2.0.trunc());
assert((-2.7).floor() == -3.0.trunc());
assert((-2.7).trunc() == -2);

// Trigonometric functions
let pi_half = 1.57079632679;
assert((0.0.sin() - 0.0).abs() < 0.0001);
assert((pi_half.sin() - 1.0).abs() < 0.0001);
assert((0.0.cos() - 1.0).abs() < 0.0001);
assert((pi_half.cos() - 0.0).abs() < 0.0001);

// Test the Float64.pow() method
assert(2.0.pow(3.0) == 8.0);
assert(9.0.pow(0.5) == 3.0);
assert(2.0.pow(-2.0) == 0.25);
assert(4.0.pow(1.5) == 8.0);

// Epsilon for precision
let epsilon = 0.000001;
let x = 1.0 / 3.0;
let y = 0.333333;
assert((x - y).abs() < epsilon);

// Test mixed-type arithmetic
assert(5 + 2.5 == 7.5);
assert(3.5 + 7 == 10.5);

// Format decimals
assert((5.2).format_decimals(0) == "5");
assert((5.2).format_decimals(0) == "5");
assert((5.2).format_decimals(1) == "5.2");
assert((5.2).format_decimals(2) == "5.20");
assert((5.21).format_decimals(1) == "5.2");

// Test exp and ln
let e = 2.71828182846;
assert((1.0.exp() - e).abs() < 0.00001);
assert((0.0.exp() - 1.0).abs() < 0.00001);
assert((e.ln() - 1.0).abs() < 0.00001);
assert((1.0.ln() - 0.0).abs() < 0.00001);

$println("All float tests passed!");
